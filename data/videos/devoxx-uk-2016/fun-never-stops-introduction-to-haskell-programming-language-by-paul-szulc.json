{
    "description": "What is functional programming? No assignment statements, no variables, once given a value never change, no side-effects at all. “The functional programmer sounds rather like a mediæval monk, denying himself the pleasures of life in the hope that it will make him virtuous.”.\n\nBut there must be something to it, as there are languages which allow only this kind of approach to software design. Can something useful can really be done in this paradigm?\n\nI will show you a language develop in the late 80s called Haskell. We will explore its syntax as well as philosophy behind its creation. Why would you want to learn Haskell? Some say it will make you a better developer, triggering ability to look at software problems with different approach. Is it true? You have to see it for yourself.",
    "favorite": "0",
    "length": "51:26",
    "likes": "59",
    "recorded": "2016-06-08",
    "speakers": [
        "paul-szulc"
    ],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/1jZ7j21g028/hqdefault.jpg",
    "title": "Fun never stops. Introduction to Haskell Programming language",
    "videos": [
        {
            "code": "1jZ7j21g028",
            "type": "youtube"
        }
    ],
    "views": "3989"
}