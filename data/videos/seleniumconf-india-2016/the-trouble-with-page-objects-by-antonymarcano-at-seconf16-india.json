{
    "description": "PageObjects have some common problems that many people see but not everyone can explain. Over time they can become harder and harder to maintain. In some cases, they become a tangled mess riddled with deep inheritance hierarchies. How can this happen?!\n\nPageObjects provide an easy-to-follow, simple structure that avoids early maintenance issues. But, they break some key OO design rules, making maintenance more difficult over time. This can result in flaky tests. PageObjects were introduced to help test-developers avoid mistaking flaky tests for problems with Selenium. It was a useful first step, so why did we stop there?\n\nIn this session you’ll learn about the SOLID design principles that PageObjects disregard. You'll see why this leads to problems. You’ll see how and why PageObjects benefit from refactoring to SOLID design principles. Finally, you’ll meet the Screenplay Pattern; an alternative that can save you the effort.\n\nMore details: https://confengine.com/selenium-conf-2016/proposal/2475\n\nConference: http://2016.seleniumconf.in",
    "favorite": "0",
    "length": "50:37",
    "likes": "2",
    "recorded": "2016-06-24",
    "speakers": [
        "antony-marcano"
    ],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/_I-6v1UJOmI/hqdefault.jpg",
    "title": "The Trouble with Page Objects",
    "videos": [
        {
            "code": "_I-6v1UJOmI",
            "type": "youtube"
        }
    ],
    "views": "248"
}