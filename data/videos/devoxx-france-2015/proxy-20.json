{
    "description": "Depuis la version 1.3 du JDK, il existe une classe java.lang.reflect.Proxy qui permet la génération de proxy (une classe implantant une ou plusieurs interface) à l'exécution. Utilisée initialement pour le support de RMI, cette API (où ses dérivées) est utilisées par de nombreuses applications/frameworks comme Hibernate, Spring ou Weld.Malheureusement, le design de cette API montre son âge, son usage est non transparent (stacktrace de la mort), son implantation est lente (la VM est perdu) et la gestion des nouveautés comme les méthodes par défaut ne sont pas pris en compte.Ce talk va raconter l'histoire de l'API Proxy 2.0, de son design et de son implantation et juste pour rire répondre à la question que tout le monde se pose \"comment faire tourner des lambdas Java 8 sur Java 7\". Le code est librement disponible: https://github.com/forax/proxy2\n\n\nAuthor:\nRemi Forax\nAssistant Professor at Paris-East Marne-la-Vallée. I am a JSR 292/235 expert, an OpenJDK hacker, an ASM developer and the creator of the JSR 292 backport and PHP.reboot.",
    "favorite": "0",
    "length": "51:37",
    "likes": "2",
    "recorded": "2015-04-10",
    "speakers": [
        "remi-forax"
    ],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/noXPKssAnuY/hqdefault.jpg",
    "title": "Proxy 2.0",
    "videos": [
        {
            "code": "noXPKssAnuY",
            "type": "youtube"
        }
    ],
    "views": "77"
}