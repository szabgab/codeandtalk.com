{
    "description": "With the amazing performance of modern single threaded JavaScript how can we catch up in parallelism? Today’s hardware provides specialized instructions that can operate on data in parallel and provides multiple execution units that can run code in parallel. The single threaded nature of classic JavaScript cannot take advantage of these resources. When quad-core smartphones are already available today that leaves a lot of performance potential on the table. I will share work we are doing to extend JavaScript with flexible and powerful primitives for parallelism that will unlock new performance opportunities to the Web. Let’s explore how native code concepts like shared memory and execution synchronization could work in JavaScript. With great power comes great responsibility so I will touch on some mitigation strategies we have in place to make sure tomorrow’s web applications stay well behaved as they use all the horsepower your hardware can provide.\n\nTranscript: https://gist.github.com/voodootikigod/e146469b95b7c25962cd",
    "favorite": "0",
    "length": "32:40",
    "likes": "267",
    "recorded": "2015-05-27",
    "speakers": [
        "naveed-ihsanullah"
    ],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/h_M_uscOKJM/hqdefault.jpg",
    "title": "Parallelism experiments in JavaScript",
    "videos": [
        {
            "code": "h_M_uscOKJM",
            "type": "youtube"
        }
    ],
    "views": "15356"
}