{
    "description": "2026 weil 30 RegEx ausreichen können, um UNIX zu definieren.\n\nBeschreibung:\nReguläre Ausdrücke sind eines der wichtigsten Werkzeuge zur Textverarbeitung. Matcht diese Zeichenkette? Wieviele Ersetzungen werden durchgeführt? In diesem Vortrag diskutieren wir erweiterte Features.\n\nMit regulären Ausdrücken können wir Strings gegen Muster matchen, Teile extrahieren und Teile ersetzen. Die Mächtigkeit von regulären Ausdrücken gehen dabei über jene von regulären Sprachen hinaus.\n\nDiese Grenze wurde überschritten, da Entwickler meist mit komplexeren Sprachen zu arbeiten haben. IEEE 754, XML und LaTeX bedürfen laut der Theorie formaler Grammatiken unterschiedlicher Behandlung. In der Geschichte der regulären Ausdrücken wurden daher Erweiterungen eingeführt, die ihre Mächtigkeit erhöhen, aber reguläre Ausdrücke auch langsamer lassen werden.\n\nIn diesem Vortrag möchte ich ganz kurz die Grundlagen wiederholen, bekannte erweiterte Features ausgiebig diskutieren, die Performance von RegEx Engines ansprechen und die Zukunft von regulären Ausdrücken beleuchten.\n\nDer Talk kann als Fortsetzung meines Vortrags \"RegEx in der Praxis\" (Nov 2014) betrachtet werden.\n\nVortragender: Lukas Prokop",
    "favorite": "0",
    "length": "56:07",
    "likes": "0",
    "recorded": "2015-04-24",
    "speakers": [
        "lukas-prokop"
    ],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/LpOVm90oYXY/hqdefault.jpg",
    "title": "Regulaere Ausdruecke fuer Fortgeschrittene",
    "videos": [
        {
            "code": "LpOVm90oYXY",
            "type": "youtube"
        }
    ],
    "views": "65"
}