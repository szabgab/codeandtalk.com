{
  "description": "Don't use metaprogramming! Don't use macros! You will often hear those statements. But metaprogramming or speaking more specific macros are heavily used in scala ecosystem. Almost every big project in functional or \"reactive\" technology stack uses them somewhere under the hood. What are macros? Why they are so controversial? What macros can offer to an engineer? Why they are useful? How they can minimize amount of boilerplate code? After answering those questions by showing small examples, we will start to develop library(or maybe better term will be DSL) for parsing XML.\n\nBut there is something more I didn't mention. If you are familiar with Scala ecosystem and up to date with roadmap of new Scala versions, you should be aware that...MACROS ARE DEAD. So why bother? Because there is new, bright future of metaprogramming in Scala called Scala Meta. We will see that knowledge gained after learning macros will be helpful when we will learn new approach presented in Scala Meta.\n\nMore details: https://confengine.com/functional-conf-2016/proposal/2924/magic-at-compile-time-metaprogramming-in-scala\n\nConference details: http://functionalconf.com/",
  "recorded": "2016-10-13",
  "speakers": [],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/uWtEL1spHqc/hqdefault.jpg",
  "title": "Magic at compile time. Metaprogramming in Scala by Bartosz B\u0105bol @ Functional Conf 2016",
  "videos": [
    {
      "code": "uWtEL1spHqc",
      "type": "youtube"
    }
  ]
}