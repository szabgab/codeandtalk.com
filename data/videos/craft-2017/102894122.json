{
    "description": "Unit testing ensures your production code is relevant. But what does ensure your testing code is relevant? Come discover mutation testing and make sure your never forget another assert again. \r\n\r\nIn the realm of testing, the code coverage metrics is the most often talked about. However, it doesnât mean that the test has been useful or even that an assert has been coded. Mutation testing is a strategy to make sure that the test code is relevant. \r\n\r\nIn this talk, I will explain how Code Coverage is computed and what its inherent flaw is. Afterwards, I will describe how Mutation Testing work and how it helps pointing out code that is tested but leave out corner cases. I will also demo PIT, a Java production-grade framework that enables Mutation Testing on a simple code base.",
    "favorite": "0",
    "length": "39:27",
    "likes": "0",
    "recorded": "2017-04-27",
    "speakers": [
        "nicolas-frankel"
    ],
    "tags": [],
    "thumbnail_url": "http://static-cdn1.ustream.tv/i/video/picture/0/1/102/102894/102894122/1_17590738_102894122,640x360,b,1:2.jpg",
    "title": "Mutation Testing to the rescue of your Tests",
    "videos": [
        {
            "code": "102894122",
            "type": "ustream"
        }
    ],
    "views": "0"
}